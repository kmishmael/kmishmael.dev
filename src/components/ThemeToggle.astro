---

---

<button
  id="themeToggle"
  class="h-9 w-9 relative cursor-pointer border border-black dark:border-white rounded-full overflow-hidden"
  aria-label="Toggle theme"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="absolute h-5 w-5 top-2 left-2 transition-all duration-800 ease-in-out light-icon"
  >
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="absolute h-5 w-5 top-2 left-2 transition-all duration-800 ease-in-out dark-icon"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</button>

<style>
  .light-icon {
    opacity: var(--light-icon-opacity);
    transform: var(--light-icon-transform);
  }

  .dark-icon {
    opacity: var(--dark-icon-opacity);
    transform: var(--dark-icon-transform);
  }

  :global(.dark) .dark-icon {
    --dark-icon-opacity: 1;
    --dark-icon-transform: translate(0) rotate(0);
  }

  :global(.dark) .light-icon {
    --light-icon-opacity: 0;
    --light-icon-transform: translate(10px, -10px) rotate(45deg);
  }

  :global(.light) .dark-icon {
    --dark-icon-opacity: 0;
    --dark-icon-transform: translate(-10px, 10px) rotate(-45deg);
  }

  :global(.light) .light-icon {
    --light-icon-opacity: 1;
    --light-icon-transform: translate(0) rotate(0);
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
      document.documentElement.classList.add("light");
    } else {
      document.documentElement.classList.add("dark");
      document.documentElement.classList.remove("light");
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");
      element.classList.toggle("light");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    document
      .getElementById("themeToggle")
      ?.addEventListener("click", handleToggleClick);
  });
</script>
